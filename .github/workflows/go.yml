name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Checkout
      run: git fetch --prune --unshallow --tags
    
    - name: Login to Docker Hub
      id: login_docker_hub
      uses: docker/login-action@v3
      with:
        username: kellerman81
        password: ${{ secrets.DOCKER }}
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Install xmllint
      run: sudo apt install -y gcc-aarch64-linux-gnu
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
    
    - id: commit
      uses: pr-mpt/actions-commit-hash@v3
    
    - name: Get current version
      id: version
      run: |
        echo "version=$(git describe --tags --exclude latest_develop)" >> $GITHUB_OUTPUT
      
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
    - name: Build Main
      run: make buildmain
    - name: Build Imdb
      run: make buildimdb
    
    - name: Rename Win64 binary
      run: mv init_imdb-windows-amd64.exe init_imdb.exe

    - name: Rename Win64 binary dl
      run: mv go_media_downloader-windows-amd64.exe go_media_downloader.exe

    - name: Zip Win64 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-windows-x64.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-* init_imdb-*'
    
    #- name: Build and push windows/amd64
    #  uses: docker/build-push-action@v6
    #  with:
    #    platforms: windows/amd64
    #    load: true
    #    file: './Dockerfile-Windows'
    #    tags: kellerman81/go_media_downloader:latest,kellerman81/go_media_downloader:${{ steps.version.outputs.version }}
    
    - name: Remove Win binary
      run: rm init_imdb.exe

    - name: Remove Win binary dl
      run: rm go_media_downloader.exe

    - name: Rename Linux64 binary
      run: mv init_imdb-linux-amd64 init_imdb

    - name: Rename Linux64 binary dl
      run: mv go_media_downloader-linux-amd64 go_media_downloader

    - name: Zip Linux64 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-linux-x64.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-* init_imdb-*'
    
    - name: Build and push linux/amd64
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        push: true
        tags: kellerman81/go_media_downloader:latest,kellerman81/go_media_downloader:${{ steps.version.outputs.version }}

    - name: Remove Linux binary
      run: rm init_imdb

    - name: Remove Linux binary dl
      run: rm go_media_downloader
    
    - name: Rename LinuxArm64 binary
      run: mv init_imdb-linux-arm64 init_imdb

    - name: Rename LinuxArm64 binary dl
      run: mv go_media_downloader-linux-arm64 go_media_downloader

    - name: Zip LinuxArm64 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-linux-arm64.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-* init_imdb-*'
    
    - name: Build and push linux/arm64
      uses: docker/build-push-action@v6
      with:
        platforms: linux/arm64
        push: true
        tags: kellerman81/go_media_downloader:latest,kellerman81/go_media_downloader:${{ steps.version.outputs.version }}

    - name: Development Release
      if: ${{ github.event_name == 'push' && !startsWith(steps.version.outputs.version, 'v') }}
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: latest_develop
        title: "Latest development build"
        files: |
          gomedia-linux-x64.zip
          gomedia-linux-arm64.zip
          gomedia-windows-x64.zip
          
    - name: Stable Release
      if: ${{ github.event_name == 'push' && startsWith(steps.version.outputs.version, 'v') }}
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: "${{ steps.version.outputs.version }}"
        title: "${{ steps.version.outputs.version }}"
        files: |
          gomedia-linux-x64.zip
          gomedia-linux-arm64.zip
          gomedia-windows-x64.zip

    - name: Logout from Docker Hub
      run: docker logout