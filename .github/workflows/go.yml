name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Checkout
      run: git fetch --prune --unshallow --tags
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
    
    - id: commit
      uses: pr-mpt/actions-commit-hash@v3
    
    - name: Get current version
      id: version
      run: |
        echo "version=$(git describe --tags --exclude latest_develop)" >> $GITHUB_OUTPUT
      
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

    #- name: Build with xgo
    #  uses: crazy-max/ghaction-xgo@v3
    #  with:
    #      prefix: go_media_downloader
    #      targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/amd64
    #      v: false
    #      x: false
    #      race: false
    #      ldflags: -s -w -X 'main.version=${{ steps.version.outputs.version }}' -X 'main.githash=${{ steps.commit.outputs.short }}' -X 'main.buildstamp=${{ steps.date.outputs.date }}'
    #      buildmode: default
    #      working_dir: /home/runner/work/go_media_downloader/go_media_downloader/pkg/main
    
    #- name: Build with xgo imdb
    #  uses: crazy-max/ghaction-xgo@v3
    #  with:
    #      prefix: imdb
    #      targets: windows/386,windows/amd64,linux/386,linux/amd64,darwin/amd64
    #      v: false
    #      x: false
    #      race: false
    #      ldflags: -s -w -X 'main.version=${{ steps.version.outputs.version }}' -X 'main.githash=${{ steps.commit.outputs.short }}' -X 'main.buildstamp=${{ steps.date.outputs.date }}'
    #      buildmode: default
    #      working_dir: /home/runner/work/go_media_downloader/go_media_downloader/pkg/imdb
    - name: Set up MinGW
      uses: egor-tensin/setup-mingw@v2
    - name: Build Main
      run: make buildmain
    - name: Build Imdb
      run: make buildimdb
    
    - name: Rename Win32 binary
      run: mv ./pkg/imdb/init_imdb-windows-386.exe init_imdb.exe

    - name: Rename Win32 binary dl
      run: mv ./pkg/main/go_media_downloader-windows-386.exe go_media_downloader.exe

    - name: Zip Win32 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-windows-x86.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-*'

    - name: Rename Win64 binary
      run: mv ./pkg/imdb/init_imdb-windows-amd64.exe init_imdb.exe

    - name: Rename Win64 binary dl
      run: mv ./pkg/main/go_media_downloader-windows-amd64.exe go_media_downloader.exe

    - name: Zip Win64 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-windows-x64.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-*'

    - name: Remove Win binary
      run: rm ./init_imdb.exe

    - name: Remove Win binary dl
      run: rm ./go_media_downloader.exe

    - name: Rename Linux32 binary
      run: mv ./pkg/imdb/init_imdb-linux-386 init_imdb

    - name: Rename Linux32 binary dl
      run: mv ./pkg/main/go_media_downloader-linux-386 go_media_downloader

    - name: Zip Linux32 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-linux-x86.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-*'

    - name: Rename Linux64 binary
      run: mv ./pkg/imdb/init_imdb-linux-amd64 init_imdb

    - name: Rename Linux64 binary dl
      run: mv ./pkg/main/go_media_downloader-linux-amd64 go_media_downloader

    - name: Zip Linux64 binary
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: 'gomedia-linux-x64.zip'
        exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-*'
    
    #- name: Rename Mac64 binary
    #  run: mv ./pkg/imdb/imdb-darwin-amd64 init_imdb

    #- name: Rename Mac64 binary dl
    #  run: mv ./pkg/main/go_media_downloader-darwin-amd64 go_media_downloader

    #- name: Zip Mac64 binary
    #  uses: thedoctor0/zip-release@master
    #  with:
    #    type: 'zip'
    #    filename: 'gomedia-macos-x64.zip'
    #    exclusions: '*.git* /.github/* /pkg/* Dockerfile go.* *.zip *.go go_media_downloader-*'

    - name: Development Release
      if: ${{ github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v') }}
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: true
        automatic_release_tag: latest_develop
        title: "Latest development build"
        files: |
          gomedia-linux-x64.zip
          gomedia-windows-x64.zip
          gomedia-linux-x86.zip
          gomedia-windows-x86.zip
          
    - name: Stable Release
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}
      uses: marvinpinto/action-automatic-releases@v1.2.1
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        prerelease: false
        automatic_release_tag: "${{ steps.version.outputs.version }}"
        title: "${{ steps.version.outputs.version }}"
        files: |
          gomedia-linux-x64.zip
          gomedia-windows-x64.zip
          gomedia-linux-x86.zip
          gomedia-windows-x86.zip