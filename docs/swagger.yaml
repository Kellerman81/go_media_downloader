definitions:
  api.apiNameInputJSON:
    properties:
      cfg_media:
        type: string
      filepath:
        type: string
      grouptype:
        type: string
      movieid:
        type: integer
      serieid:
        type: integer
    type: object
  api.apiStructureJSON:
    properties:
      configentry:
        type: string
      disabledeletewronglanguage:
        type: boolean
      disabledisallowed:
        type: boolean
      disableruntimecheck:
        type: boolean
      folder:
        type: string
      forceid:
        type: integer
      grouptype:
        type: string
      sourcepathtemplate:
        type: string
      targetpathtemplate:
        type: string
    type: object
  api.apiparse:
    properties:
      config:
        type: string
      name:
        type: string
      path:
        type: string
      quality:
        type: string
      typ:
        type: string
      year:
        type: boolean
    type: object
  apiexternal.NZB:
    properties:
      download_url:
        description: |-
          Torznab specific stuff
          Seeders     int    `json:"seeders,omitempty"`
          Peers       int    `json:"peers,omitempty"`
          InfoHash    string `json:"infohash,omitempty"`
        type: string
      episode:
        type: string
      id:
        type: string
      imdb:
        description: Movie Specific stuff
        type: string
      is_torrent:
        type: boolean
      season:
        type: string
      size:
        description: Description string    `json:"description,omitempty"`
        type: integer
      source_endpoint:
        type: string
      title:
        type: string
      tvdbid:
        description: TV Specific stuff
        type: string
    type: object
  apiexternal.NzbwithprioJSON:
    properties:
      denied:
        type: boolean
      indexer:
        type: string
      minimumPriority:
        type: integer
      nzb:
        $ref: '#/definitions/apiexternal.NZB'
      nzbepisodeID:
        type: integer
      nzbmovieID:
        type: integer
      parseInfo:
        $ref: '#/definitions/apiexternal.ParseInfo'
      prio:
        type: integer
      qualityTemplate:
        type: string
      reason:
        type: string
      wantedAlternates:
        items:
          type: string
        type: array
      wantedTitle:
        type: string
    type: object
  apiexternal.ParseInfo:
    properties:
      audio:
        type: string
      audioid:
        type: integer
      codec:
        type: string
      codecid:
        type: integer
      date:
        type: string
      dbmovieid:
        type: integer
      dbserieepisodeid:
        type: integer
      dbserieid:
        type: integer
      episode:
        type: integer
      episodestr:
        type: string
      extended:
        type: boolean
      file:
        type: string
      height:
        type: integer
      identifier:
        type: string
      imdb:
        type: string
      languages:
        items:
          type: string
        type: array
      listname:
        type: string
      movieid:
        type: integer
      priority:
        type: integer
      proper:
        type: boolean
      quality:
        type: string
      qualityid:
        type: integer
      qualityset:
        type: string
      repack:
        type: boolean
      resolution:
        type: string
      resolutionid:
        type: integer
      runtime:
        type: integer
      season:
        type: integer
      seasonstr:
        type: string
      serieepisodeid:
        type: integer
      serieid:
        type: integer
      title:
        type: string
      tvdb:
        type: string
      width:
        type: integer
      year:
        type: integer
    type: object
  database.DbmovieJSON:
    properties:
      adult:
        type: boolean
      backdrop:
        type: string
      budget:
        type: integer
      createdAt:
        type: string
      facebookID:
        type: string
      freebaseID:
        type: string
      freebaseMID:
        type: string
      genres:
        type: string
      id:
        type: integer
      imdbID:
        type: string
      instagramID:
        type: string
      moviedbID:
        type: integer
      originalLanguage:
        type: string
      originalTitle:
        type: string
      overview:
        type: string
      popularity:
        type: number
      poster:
        type: string
      release_date:
        type: string
      revenue:
        type: integer
      runtime:
        type: integer
      slug:
        type: string
      spokenLanguages:
        type: string
      status:
        type: string
      tagline:
        type: string
      title:
        type: string
      traktID:
        type: integer
      twitterID:
        type: string
      updatedAt:
        type: string
      url:
        type: string
      voteAverage:
        type: number
      voteCount:
        type: integer
      year:
        type: integer
    type: object
  database.Dbserie:
    properties:
      aliases:
        type: string
      banner:
        type: string
      createdAt:
        type: string
      facebook:
        type: string
      fanart:
        type: string
      firstaired:
        type: string
      freebaseID:
        type: string
      freebaseMID:
        type: string
      genre:
        type: string
      id:
        type: integer
      identifiedby:
        type: string
      imdbID:
        type: string
      instagram:
        type: string
      language:
        type: string
      network:
        type: string
      overview:
        type: string
      poster:
        type: string
      rating:
        type: string
      runtime:
        type: string
      season:
        type: string
      seriename:
        type: string
      siterating:
        type: string
      siteratingCount:
        type: string
      slug:
        type: string
      status:
        type: string
      thetvdbID:
        type: integer
      traktID:
        type: integer
      tvrageID:
        type: integer
      twitter:
        type: string
      updatedAt:
        type: string
    type: object
  database.DbserieEpisodeJSON:
    properties:
      createdAt:
        type: string
      dbserieID:
        type: integer
      episode:
        type: string
      first_aired:
        type: string
      id:
        type: integer
      identifier:
        type: string
      overview:
        type: string
      poster:
        type: string
      season:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  database.JobHistoryJSON:
    properties:
      createdAt:
        type: string
      ended:
        type: string
      id:
        type: integer
      jobCategory:
        type: string
      jobGroup:
        type: string
      jobType:
        type: string
      started:
        type: string
      updatedAt:
        type: string
    type: object
  database.MovieFileUnmatchedJSON:
    properties:
      createdAt:
        type: string
      filepath:
        type: string
      id:
        type: integer
      last_checked:
        type: string
      listname:
        type: string
      parsedData:
        type: string
      updatedAt:
        type: string
    type: object
  database.MovieJSON:
    properties:
      blacklisted:
        type: boolean
      createdAt:
        type: string
      dbmovieID:
        type: integer
      dontSearch:
        type: boolean
      dontUpgrade:
        type: boolean
      id:
        type: integer
      lastscan:
        type: string
      listname:
        type: string
      missing:
        type: boolean
      qualityProfile:
        type: string
      qualityReached:
        type: boolean
      rootpath:
        type: string
      updatedAt:
        type: string
    type: object
  database.Qualities:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      priority:
        type: integer
      qualityType:
        type: integer
      regex:
        type: string
      strings:
        type: string
      stringsLower:
        type: string
      updatedAt:
        type: string
      useRegex:
        type: boolean
    type: object
  database.ResultMoviesJSON:
    properties:
      adult:
        type: boolean
      backdrop:
        type: string
      blacklisted:
        type: boolean
      budget:
        type: integer
      createdAt:
        type: string
      dbmovieID:
        type: integer
      facebookID:
        type: string
      freebaseID:
        type: string
      freebaseMID:
        type: string
      genres:
        type: string
      id:
        type: integer
      imdbID:
        type: string
      instagramID:
        type: string
      lastscan:
        type: string
      listname:
        type: string
      missing:
        type: boolean
      moviedbID:
        type: integer
      originalLanguage:
        type: string
      originalTitle:
        type: string
      overview:
        type: string
      popularity:
        type: number
      poster:
        type: string
      qualityProfile:
        type: string
      qualityReached:
        type: boolean
      release_date:
        type: string
      revenue:
        type: integer
      rootpath:
        type: string
      runtime:
        type: integer
      slug:
        type: string
      spokenLanguages:
        type: string
      status:
        type: string
      tagline:
        type: string
      title:
        type: string
      traktID:
        type: integer
      twitterID:
        type: string
      updatedAt:
        type: string
      url:
        type: string
      voteAverage:
        type: number
      voteCount:
        type: integer
      year:
        type: integer
    type: object
  database.ResultSerieEpisodesJSON:
    properties:
      blacklisted:
        type: boolean
      createdAt:
        type: string
      dbserieEpisodeID:
        type: integer
      dbserieID:
        type: integer
      episode:
        type: string
      first_aired:
        type: string
      id:
        type: integer
      identifier:
        type: string
      lastscan:
        type: string
      listname:
        type: string
      missing:
        type: boolean
      overview:
        type: string
      poster:
        type: string
      qualityProfile:
        type: string
      qualityReached:
        type: boolean
      rootpath:
        type: string
      season:
        type: string
      title:
        type: string
      updatedAt:
        type: string
    type: object
  database.ResultSeries:
    properties:
      aliases:
        type: string
      banner:
        type: string
      createdAt:
        type: string
      dbserieID:
        type: integer
      facebook:
        type: string
      fanart:
        type: string
      firstaired:
        type: string
      freebaseID:
        type: string
      freebaseMID:
        type: string
      genre:
        type: string
      id:
        type: integer
      identifiedby:
        type: string
      imdbID:
        type: string
      instagram:
        type: string
      language:
        type: string
      listname:
        type: string
      network:
        type: string
      overview:
        type: string
      poster:
        type: string
      rating:
        type: string
      rootpath:
        type: string
      runtime:
        type: string
      season:
        type: string
      seriename:
        type: string
      siterating:
        type: string
      siteratingCount:
        type: string
      slug:
        type: string
      status:
        type: string
      thetvdbID:
        type: integer
      traktID:
        type: integer
      tvrageID:
        type: integer
      twitter:
        type: string
      updatedAt:
        type: string
    type: object
  database.SerieEpisodeJSON:
    properties:
      blacklisted:
        type: boolean
      createdAt:
        type: string
      dbserieEpisodeID:
        type: integer
      dbserieID:
        type: integer
      dontSearch:
        type: boolean
      dontUpgrade:
        type: boolean
      id:
        type: integer
      lastscan:
        type: string
      missing:
        type: boolean
      qualityProfile:
        type: string
      qualityReached:
        type: boolean
      serieID:
        type: integer
      updatedAt:
        type: string
    type: object
  database.SerieFileUnmatchedJSON:
    properties:
      createdAt:
        type: string
      filepath:
        type: string
      id:
        type: integer
      last_checked:
        type: string
      listname:
        type: string
      parsedData:
        type: string
      updatedAt:
        type: string
    type: object
  database.SerieJSON:
    properties:
      createdAt:
        type: string
      dbserieID:
        type: integer
      dontSearch:
        type: boolean
      dontUpgrade:
        type: boolean
      id:
        type: integer
      ignoreRuntime:
        type: boolean
      listname:
        type: string
      rootpath:
        type: string
      searchSpecials:
        type: boolean
      updatedAt:
        type: string
    type: object
  tasks.Job:
    properties:
      added:
        type: string
      id:
        type: string
      name:
        type: string
      queue:
        type: string
      schedulerID:
        type: string
      started:
        type: string
    type: object
host: localhost:9090
info:
  contact: {}
  title: Go Media Downloader API
  version: "1.0"
paths:
  /api/all/data:
    get:
      description: Search all folders of movies and series for new entries
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all folders
      tags:
      - data
  /api/all/feeds:
    get:
      description: Search all feeds of movies and series for new entries
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all feeds
      tags:
      - feeds
  /api/all/search/missing/full:
    get:
      description: Search all media of movies and series for missing releases
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all Missing
      tags:
      - search
  /api/all/search/missing/inc:
    get:
      description: Search all media of movies and series for missing releases (incremental)
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all Missing Incremental
      tags:
      - search
  /api/all/search/rss:
    get:
      description: Search all rss feeds of movies and series for new releases
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all rss feeds
      tags:
      - search
  /api/all/search/upgrade/full:
    get:
      description: Search all media of movies and series for upgrades
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all Upgrades
      tags:
      - search
  /api/all/search/upgrade/inc:
    get:
      description: Search all media of movies and series for upgrades (incremental)
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search all Upgrades Incremental
      tags:
      - search
  /api/config/all:
    get:
      description: Get All Config Parameters
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Get Complete Config
      tags:
      - config
  /api/config/clear:
    delete:
      description: Clears the configuration and sets some examples
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear Config
      tags:
      - config
  /api/config/delete/{name}:
    delete:
      description: Deletes a configuration
      parameters:
      - description: 'Type Name: ex. quality_SD'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Config
      tags:
      - config
  /api/config/get/{name}:
    get:
      description: Gets a configuration
      parameters:
      - description: 'Type Name: ex. quality_SD'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: object
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Get Config
      tags:
      - config
  /api/config/refresh:
    get:
      description: Refreshes the config from the file
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Reload ConfigFile
      tags:
      - config
  /api/config/type/{type}:
    get:
      description: List configurations of type
      parameters:
      - description: 'Type Name: ex. quality'
        in: path
        name: type
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Config Type
      tags:
      - config
  /api/config/update/{name}:
    post:
      description: Updates a configuration
      parameters:
      - description: Config
        in: body
        name: config
        required: true
        schema:
          type: object
      - description: 'Type Name: ex. quality_SD'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Config
      tags:
      - config
  /api/db/backup:
    get:
      description: Saves DB
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Backup DB
      tags:
      - database
  /api/db/clear/{name}:
    delete:
      description: Clears a DB Table
      parameters:
      - description: Table Name
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear DB Table
      tags:
      - database
  /api/db/close:
    get:
      description: Closes all database connections
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Close DB
      tags:
      - database
  /api/db/integrity:
    get:
      description: Integrity Check DB
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Integrity DB
      tags:
      - database
  /api/db/oldjobs:
    delete:
      description: Removes Jobs started over x days ago from db
      parameters:
      - description: Days ago
        in: query
        name: days
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clean Old Jobs
      tags:
      - database
  /api/db/vacuum:
    get:
      description: Vacuum database
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Vacuum DB
      tags:
      - database
  /api/debugstats:
    get:
      description: Shows some stats
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Debug information
      tags:
      - general
  /api/fillimdb:
    get:
      description: Downloads IMDB Dataset and creates a new database from it
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Generate IMDB Cache
      tags:
      - general
  /api/movies:
    get:
      description: List Movies
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.DbmovieJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Movies
      tags:
      - movie
    post:
      description: Updates or creates a movie
      parameters:
      - description: Movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/database.DbmovieJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Movie (Global)
      tags:
      - movie
  /api/movies/{id}:
    delete:
      description: Deletes Movies from all lists
      parameters:
      - description: 'Movie ID: ex. 1'
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Movies
      tags:
      - movie
  /api/movies/all/refresh:
    get:
      description: Refreshes Movie Metadata
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Movies (Incremental)
      tags:
      - movie
  /api/movies/all/refreshall:
    get:
      description: Refreshes Movie Metadata
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Movies
      tags:
      - movie
  /api/movies/job/{job}:
    get:
      description: Starts a Job
      parameters:
      - description: 'Job Name one of: rss, data, datafull, checkmissing, checkmissingflag,
          structure, searchmissingfull, searchmissinginc, searchupgradefull, searchupgradeinc,
          searchmissingfulltitle, searchmissinginctitle, searchupgradefulltitle, searchupgradeinctitle,
          clearhistory, feeds, refresh, refreshinc'
        in: path
        name: job
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Start Jobs (All Lists)
      tags:
      - movie
  /api/movies/job/{job}/{name}:
    get:
      description: Starts a Job
      parameters:
      - description: 'Job Name one of: rss, data, datafull, checkmissing, checkmissingflag,
          structure, searchmissingfull, searchmissinginc, searchupgradefull, searchupgradeinc,
          searchmissingfulltitle, searchmissinginctitle, searchupgradefulltitle, searchupgradeinctitle,
          clearhistory, feeds, refresh, refreshinc'
        in: path
        name: job
        required: true
        type: string
      - description: 'List Name: ex. list'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Start Jobs
      tags:
      - movie
  /api/movies/list:
    post:
      description: Updates or creates a movie in a list
      parameters:
      - description: Movie
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/database.MovieJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Movie (List)
      tags:
      - movie
  /api/movies/list/{id}:
    delete:
      description: Deletes a Movie from a list
      parameters:
      - description: 'Movie ID: ex. 1'
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete a Movie (List)
      tags:
      - movie
  /api/movies/list/{name}:
    get:
      description: Lists Movies from a list
      parameters:
      - description: 'List Name: ex. EN'
        in: path
        name: name
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.ResultMoviesJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Movies (List)
      tags:
      - movie
  /api/movies/refresh/{id}:
    get:
      description: Refreshes specific Movie Metadata
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh a Movie
      tags:
      - movie
  /api/movies/rss/search/list/{group}:
    get:
      description: Movie RSS
      parameters:
      - description: Group Name
        in: path
        name: group
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Movie RSS (list ok, nok)
      tags:
      - movie
  /api/movies/search/download/{id}:
    post:
      description: Downloads a release after select
      parameters:
      - description: 'Nzb: Req. Title, Indexer, imdbid, downloadurl, parseinfo'
        in: body
        name: nzb
        required: true
        schema:
          $ref: '#/definitions/apiexternal.NzbwithprioJSON'
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Download a movie (manual)
      tags:
      - movie
  /api/movies/search/history/clear/{name}:
    get:
      description: Clear Movies Download History
      parameters:
      - description: List Name
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear History (Full List)
      tags:
      - movie
  /api/movies/search/history/clearid/{id}:
    get:
      description: Clear Episode Download History
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear History (Single Item)
      tags:
      - movie
  /api/movies/search/id/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a movie
      tags:
      - movie
  /api/movies/search/list/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a movie (List ok, nok)
      tags:
      - movie
  /api/movies/unmatched:
    get:
      description: List Unmatched Movies
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.MovieFileUnmatchedJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Unmatched Movies
      tags:
      - movie
  /api/naming:
    post:
      description: Test your Naming Convention
      parameters:
      - description: Config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.apiNameInputJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Name Generation Test
      tags:
      - general
  /api/parse/file:
    post:
      description: Parses a file for testing
      parameters:
      - description: To Parse
        in: body
        name: toparse
        required: true
        schema:
          $ref: '#/definitions/api.apiparse'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apiexternal.ParseInfo'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Parse a file
      tags:
      - parse
  /api/parse/string:
    post:
      description: Parses a string for testing
      parameters:
      - description: To Parse
        in: body
        name: toparse
        required: true
        schema:
          $ref: '#/definitions/api.apiparse'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apiexternal.ParseInfo'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Parse a string
      tags:
      - parse
  /api/quality:
    get:
      description: List Qualities with regex filters
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Qualities'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Qualities
      tags:
      - quality
    post:
      description: Updates or adds a quality
      parameters:
      - description: Quality
        in: body
        name: quality
        required: true
        schema:
          $ref: '#/definitions/database.Qualities'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Qualities'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Quality
      tags:
      - quality
  /api/quality/{id}:
    delete:
      description: Deletes a quality
      parameters:
      - description: Id of Quality to delete
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Qualities'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Quality
      tags:
      - quality
  /api/quality/{name}:
    get:
      description: List allowed qualities and their priorities
      parameters:
      - description: 'Quality Name: ex. SD'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apiexternal.ParseInfo'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: List Quality Priorities
      tags:
      - quality
  /api/quality/all:
    get:
      description: List allowed qualities and their priorities
      parameters:
      - description: 'Quality Name: ex. SD'
        in: path
        name: name
        required: true
        type: string
      - description: 'Config Name: ex. movie_EN or serie_EN'
        in: path
        name: config
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apiexternal.ParseInfo'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: List Quality Priorities
      tags:
      - quality
  /api/quality/complete:
    get:
      description: List all qualities and their priorities
      parameters:
      - description: 'Quality Name: ex. SD'
        in: path
        name: name
        required: true
        type: string
      - description: 'Config Name: ex. movie_EN or serie_EN'
        in: path
        name: config
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/apiexternal.ParseInfo'
        "401":
          description: Unauthorized
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: List Quality Priorities
      tags:
      - quality
  /api/queue:
    get:
      description: Lists Queued and Started Jobs (but not finished)
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              $ref: '#/definitions/tasks.Job'
            type: object
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Queue
      tags:
      - general
  /api/queue/history:
    get:
      description: Lists Started Jobs and finished but not queued jobs
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.JobHistoryJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Queue History
      tags:
      - general
  /api/scheduler/list:
    get:
      description: Lists Planned Jobs
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Scheduler Jobs
      tags:
      - scheduler
  /api/scheduler/start:
    get:
      description: Start all Schedulers
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Start Scheduler
      tags:
      - scheduler
  /api/scheduler/stop:
    get:
      description: Stops all Schedulers
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Stop Scheduler
      tags:
      - scheduler
  /api/series:
    get:
      description: List Series
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Dbserie'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series
      tags:
      - series
    post:
      description: Updates or creates a series
      parameters:
      - description: Series
        in: body
        name: series
        required: true
        schema:
          $ref: '#/definitions/database.Dbserie'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Series (Global)
      tags:
      - series
  /api/series/{id}:
    delete:
      description: Delete Series
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Series
      tags:
      - series
  /api/series/all/refresh:
    get:
      description: Refreshes Series Metadata
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Series Incremental
      tags:
      - series
  /api/series/all/refreshall:
    get:
      description: Refreshes Series Metadata
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Series
      tags:
      - series
  /api/series/episodes:
    get:
      description: List episodes
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.DbserieEpisodeJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series Episodes
      tags:
      - series
    post:
      description: Updates or creates a episode
      parameters:
      - description: Episode
        in: body
        name: episode
        required: true
        schema:
          $ref: '#/definitions/database.DbserieEpisodeJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Series Episodes (Global)
      tags:
      - series
  /api/series/episodes/{id}:
    delete:
      description: Delete Series Episode
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Episode
      tags:
      - series
    get:
      description: List episodes
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.DbserieEpisodeJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series Episodes (Single)
      tags:
      - series
  /api/series/episodes/list:
    post:
      description: Updates or creates a episode
      parameters:
      - description: Episode
        in: body
        name: episode
        required: true
        schema:
          $ref: '#/definitions/database.SerieEpisodeJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Series Episodes (List)
      tags:
      - series
  /api/series/episodes/list/{id}:
    delete:
      description: Delete Series Episode
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Episode (List)
      tags:
      - series
    get:
      description: List episodes
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.ResultSerieEpisodesJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series Episodes (List)
      tags:
      - series
  /api/series/episodes/search/download/{id}:
    post:
      description: Downloads a release after select
      parameters:
      - description: 'Nzb: Req. Title, Indexer, tvdbid, downloadurl, parseinfo'
        in: body
        name: nzb
        required: true
        schema:
          $ref: '#/definitions/apiexternal.NzbwithprioJSON'
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Download a episode (manual)
      tags:
      - series
  /api/series/episodes/search/id/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a episode
      tags:
      - series
  /api/series/episodes/search/list/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: integer
      - description: searchByTitle
        in: query
        name: searchByTitle
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a episode (list ok, nok)
      tags:
      - series
  /api/series/job/{job}:
    get:
      description: Starts a Job
      parameters:
      - description: 'Job Name one of: rss, data, datafull, checkmissing, checkmissingflag,
          structure, searchmissingfull, searchmissinginc, searchupgradefull, searchupgradeinc,
          searchmissingfulltitle, searchmissinginctitle, searchupgradefulltitle, searchupgradeinctitle,
          clearhistory, feeds, refresh, refreshinc'
        in: path
        name: job
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Start Jobs (All Lists)
      tags:
      - series
  /api/series/job/{job}/{name}:
    get:
      description: Starts a Job
      parameters:
      - description: 'Job Name one of: rss, data, datafull, checkmissing, checkmissingflag,
          structure, searchmissingfull, searchmissinginc, searchupgradefull, searchupgradeinc,
          searchmissingfulltitle, searchmissinginctitle, searchupgradefulltitle, searchupgradeinctitle,
          clearhistory, feeds, refresh, refreshinc'
        in: path
        name: job
        required: true
        type: string
      - description: 'List Name: ex. list'
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "204":
          description: No Content
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Start Jobs
      tags:
      - series
  /api/series/list:
    post:
      description: Updates or creates a series
      parameters:
      - description: Series
        in: body
        name: series
        required: true
        schema:
          $ref: '#/definitions/database.SerieJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Update Series (List)
      tags:
      - series
  /api/series/list/{id}:
    delete:
      description: Delete Series
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Delete Series (List)
      tags:
      - series
  /api/series/list/{name}:
    get:
      description: List Series
      parameters:
      - description: List Name
        in: path
        name: name
        required: true
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.ResultSeries'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series (List)
      tags:
      - series
  /api/series/refresh/{id}:
    get:
      description: Refreshes Series Metadata
      parameters:
      - description: Serie ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Single Series
      tags:
      - series
  /api/series/rss/search/list/{group}:
    get:
      description: Series RSS
      parameters:
      - description: Group Name
        in: path
        name: group
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Series RSS (list ok, nok)
      tags:
      - series
  /api/series/search/history/clear/{name}:
    get:
      description: Clear Episode Download History
      parameters:
      - description: List Name
        in: path
        name: name
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear History (Full List)
      tags:
      - series
  /api/series/search/history/clearid/{id}:
    get:
      description: Clear Episode Download History
      parameters:
      - description: Episode ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Clear History (Single Item)
      tags:
      - series
  /api/series/search/id/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a series (all seasons)
      tags:
      - series
  /api/series/search/id/{id}/{season}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      - description: Season
        in: path
        name: season
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a series (one season)
      tags:
      - series
  /api/series/searchrss/id/{id}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a series (any season - one search call)
      tags:
      - series
  /api/series/searchrss/id/{id}/{season}:
    get:
      description: Searches for upgrades and missing
      parameters:
      - description: Series ID
        in: path
        name: id
        required: true
        type: integer
      - description: Season
        in: path
        name: season
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Search a series (one season - one search call)
      tags:
      - series
  /api/series/unmatched:
    get:
      description: List Unmatched episodes
      parameters:
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      - description: Order By
        in: query
        name: order
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.SerieFileUnmatchedJSON'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: List Series Unmatched
      tags:
      - series
  /api/slug:
    get:
      description: Regenerates Slugs
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Refresh Slugs
      tags:
      - general
  /api/structure:
    post:
      description: Structure a single folder
      parameters:
      - description: Config
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/api.apiStructureJSON'
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Structure Single Item
      tags:
      - general
  /api/trakt/authorize:
    get:
      description: Get trakt auth url
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Trakt Authorize
      tags:
      - general
  /api/trakt/token/{code}:
    get:
      description: Saves Trakt token after Authorization
      parameters:
      - description: code
        in: path
        name: code
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Trakt Save Token
      tags:
      - general
  /api/trakt/user/{user}/{list}:
    get:
      description: Get User List
      parameters:
      - description: Trakt Username
        in: path
        name: user
        required: true
        type: string
      - description: List Name
        in: path
        name: list
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Trakt Get List (Auth Test)
      tags:
      - general
schemes:
- http
- https
securityDefinitions:
  ApiKeyAuth:
    in: query
    name: apikey
    type: apiKey
swagger: "2.0"
